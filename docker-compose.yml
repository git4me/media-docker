version: "3"
services:
  
  ## Media Interfaces
  # Plex Server
  plex:
    image: plexinc/pms-docker:beta
    container_name: plex
    hostname: plex
    volumes:
      - ${BASE_DIR}/plex:/config
      - ${BASE_DIR}/plex/transcode:/transcode
      - ${MEDIA_DIR}:/data/ALL
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    labels:
      - traefik.backend=plex
      - traefik.frontend.rule=Host:plex.${DOMAIN}
      - traefik.docker.network=proxied
      - traefik.port=32400
    networks:
      - internal
      - proxied
    ports:
      - 32400:32400
      - 32400:32400/udp
      - 32469:32469
      - 32469:32469/udp
      - 3005:3005
      - 8324:8324
      - 1900:1900/udp
      - 5353:5353/udp
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
    restart: always

# airsonic
  airsonic:
    image: linuxserver/airsonic
    container_name: airsonic
    volumes:
      - ${BASE_DIR}/airsonic:/config
      - ${MEDIA_DIR}/Music:/music
      - ${MEDIA_DIR}/Music/Playlists:/playlists
      - ${MEDIA_DIR}/Music/Podcasts:/podcasts
    ports:
      - 4040:4040
    networks:
      - internal
      - proxied
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    labels:
      - traefik.backend=airsonic
      - traefik.frontend.rule=Host:airsonic.${DOMAIN}
      - traefik.docker.network=proxied
      - traefik.port=4040
    restart: always
    
  # Ubooquity
  ubooquity:
    image: linuxserver/ubooquity:latest
    container_name: ubooquity
    volumes:
      - ${BASE_DIR}/ubooquity:/config
      - ${MEDIA_DIR}/Print Media/Books:/books
      - ${MEDIA_DIR}/Print Media/Comics:/comics
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    labels:
      - traefik.backend=ubooquity
      - traefik.docker.network=proxied
      - traefik.frontend.rule=Host:ubooquity.${DOMAIN}
      - traefik.port=2202
      - traefik.default.protocol=http
      - traefik.admin.frontend.rule=Host:admin-ubooquity.${DOMAIN}
      - traefik.admin.port=2203
      - traefil.admin.protocol=http
    networks:
      - internal
      - proxied
    expose:
      - 2202
      - 2203
    restart: always

  ## /Media Interfaces

  ## Downloaders
  # nzbget
  nzbget:
    image: linuxserver/nzbget:latest
    container_name: nzbget
    volumes:
      - ${BASE_DIR}/nzbget:/config
      - ${DOWNLOAD_DIR}:/downloads
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    labels:
      - traefik.backend=nzbget
      - traefik.frontend.rule=Host:nzbget.${DOMAIN}
      - traefik.docker.network=proxied
      - traefik.port=8080
    networks:
      - internal
      - proxied
    expose:
      - 8080
    restart: always

# NZBHydra
  hydra:
    image: linuxserver/hydra2:latest
    container_name: hydra
    volumes:
      - ${BASE_DIR}/hydra:/config
      - ${BASE_DIR}/hydra/blackhole:/downloads
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    labels:
      - traefik.backend=hydra
      - traefik.frontend.rule=Host:hydra.${DOMAIN}
      - traefik.docker.network=proxied
      - traefik.port=5075
    networks:
      - internal
      - proxied
    expose:
      - 5075
    restart: always

  jackett:
    image: linuxserver/jackett:latest
    container_name: jackett
    volumes:
      - ${BASE_DIR}/jackett:/config
      - ${MEDIA_DIR}:/downloads
      - /etc/localtime:/etc/localtime:ro
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    labels:
      - traefik.backend=jackett
      - traefik.frontend.rule=Host:jackett.${DOMAIN}
      - traefik.docker.network=proxied
      - traefik.port=9117
    networks:
      - internal
      - proxied
    expose:
      - 9117
    restart: always
  ## / Downloaders

  ## Searchers
  # Sonarr
  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    volumes: 
      - ${BASE_DIR}/sonarr:/config
      - ${MEDIA_DIR}/TV:/tv
      - ${DOWNLOAD_DIR}:/downloads
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    labels:
      - traefik.backend=sonarr
      - traefik.frontend.rule=Host:sonarr.${DOMAIN}
      - traefik.docker.network=proxied
      - traefik.port=8989
    networks:
      - internal
      - proxied
    expose:
      - 8989
    restart: always

  # Radarr
  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    volumes:
      - ${BASE_DIR}/radarr:/config
      - ${MEDIA_DIR}/Movies:/movies
      - ${DOWNLOAD_DIR}:/downloads
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    labels:
      - traefik.backend=radarr
      - traefik.frontend.rule=Host:radarr.${DOMAIN}
      - traefik.docker.network=proxied
      - traefik.port=7878
    networks:
      - internal
      - proxied
    expose:
      - 7878
    restart: always

  # Lidarr
  lidarr:
    image: linuxserver/lidarr:latest
    container_name: lidarr
    volumes:
      - ${BASE_DIR}/lidarr:/config
      - ${MEDIA_DIR}/Music:/music
      - ${DOWNLOAD_DIR}:/downloads
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    labels:
      - traefik.backend=lidarr
      - traefik.frontend.rule=Host:lidarr.${DOMAIN}
      - traefik.docker.network=proxied
      - traefik.port=8686
    networks:
      - proxied
    expose:
      - 8686
    restart: always

  # LazyLibrarian
  lazylibrarian:
    image: linuxserver/lazylibrarian:latest
    container_name: lazylibrarian
    volumes:
      - ${BASE_DIR}/lazylibrarian:/config
      - ${MEDIA_DIR}/Print Media/Books:/books
      - ${DOWNLOAD_DIR}:/downloads
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    labels:
      - traefik.backend=lazylibrarian
      - traefik.frontend.rule=Host:librarian.${DOMAIN}
      - traefik.docker.network=proxied
      - traefik.port=5299
    networks:
      - internal
      - proxied
    expose:
      - 5299
    restart: always

  # Mylar
  mylar:
    image: linuxserver/mylar:latest
    container_name: mylar
    volumes:
      - ${BASE_DIR}/mylar:/config
      - ${MEDIA_DIR}/Print Media/Comics:/comics
      - ${DOWNLOAD_DIR}:/downloads
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    labels:
      - traefik.backend=mylar
      - traefik.frontend.rule=Host:mylar.${DOMAIN}
      - traefik.docker.network=proxied
      - traefik.port=8090
    networks:
      - internal
      - proxied
    expose:
      - 8090
    restart: always
  ## /Searchers

  ## Helper Apps
  # Heimdall
  heimdall:
    image: linuxserver/heimdall:latest
    container_name: heimdall
    volumes:
      - ${BASE_DIR}/heimdall:/config
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    labels:
      - traefik.backend=heimdall
      - traefik.frontend.rule=Host:heimdall.${DOMAIN}
      - traefik.docker.network=proxied
    networks:
      - internal
      - proxied
    expose:
      - 80
      - 443
    restart: always

    #  ddclient
  ddclient:
    image: linuxserver/ddclient
    container_name: ddclient
    volumes:
      - ${BASE_DIR}/ddclient:/config
    networks:
      - proxied
      - internal
    restart: always

# Wordpress    
  wpdb:
    image: mariadb
    container_name: wpdb
    ports:
      - "8081:3306"
    networks:
      - internal
      - proxied
    environment:
      - MYSQL_ROOT_PASSWORD=ChangeMeIfYouWant

  wordpress:
    image: wordpress
    container_name: wordpress
    volumes:
      - ${BASE_DIR}/wordpress:/var/www/html
    labels:
      - traefik.backend=wordpress
      - traefik.frontend.rule=Host:www.${DOMAIN}
      - traefik.docker.network=proxied
      - traefik.port=2368
    networks:
      - internal
      - proxied
    expose:
      - 2368
    links:
      - wpdb:mysql
    environment:
      - WORDPRESS_DB_PASSWORD=ChangeMeIfYouWant
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    restart: always
  #wordpress end
  
# TT-RSS
  tt-rss:
    image: linuxserver/tt-rss
    container_name: tt-rss
    links:
      - ttrssdatabase:ttrss-database
    labels:
      - traefik.backend=tt-rss
      - traefik.frontend.rule=Host:feeds.${DOMAIN}
      - traefik.docker.network=proxied
      - traefik.port=80
    networks:
      - internal
      - proxied    
    volumes:
      - ${BASE_DIR}/ttrss:/config
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    restart: always
    ports:
      - 4242:80
     
  ttrssdatabase:
    image: postgres:9.6.5-alpine
    container_name: ttrss-database
    environment:
      - POSTGRES_PASSWORD=tardis
      - POSTGRES_USER=tom42
      - POSTGRES_DB=test
      - PUID=1000
      - PGID=1000
    volumes:
      - /etc/passwd:/etc/passwd:ro
      - ${BASE_DIR}/postgresql/var/lib/postgresql/data:/var/lib/postgresql/data
    networks:
      - internal
      - proxied        
    ports:
      - 5432:5432
    restart: always
# TT-RSS end

#samba
  samba:
    image: tom42/nrobinaubertin_samba
    container_name: samba
    volumes:
      - /:/shared
    networks:
      - internal
      - proxied
    ports:
      - 137-139:7137-7139
      - 445:7445
    restart: always

  # Tautulli
  tautulli:
    image: tautulli/tautulli:latest
    container_name: tautulli
    volumes:
      - ${BASE_DIR}/tautulli:/config
      - ${BASE_DIR}/plex/Library/Application\ Support/Plex\ Media\ Server/Logs:/logs:ro
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    labels:
      - traefik.backend=tautulli
      - traefik.frontend.rule=Host:tautulli.${DOMAIN}
      - traefik.docker.network=proxied
      - traefik.port=8181
    networks:
      - proxied
      - internal
    expose:
      - 8181
    depends_on:
      - plex    
    restart: always

#pastebin
  pastebin:
    image: mkodockx/docker-pastebin
    container_name: pastebin
    volumes:
      - /home/tom42/docker/configs/pastebin:/config
      - /etc/localtime:/etc/localtime:ro
    ports:
      - 15000:80
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    labels:
      - traefik.backend=pastebin
      - traefik.frontend.rule=Host:pastebin.${DOMAIN}
      - traefik.docker.network=proxied
      - traefik.port=15000
    networks:
      - proxied
      - internal
    expose:
      - 8181
    restart: always

#rss-bridge
  rss-bridge:
    image: tom42/rss-bridge
    container_name: rss-bridge
    volumes:
      - ${BASE_DIR}/rss-bridge/whitelist.txt:/var/www/html/whitelist.txt:rw
    ports:
      - 4280:80
    environment:
      - PGID=1000
      - PUID=1000
      - TZ=${TIMEZONE}
    labels:
      - traefik.backend=rss-bridge
      - traefik.frontend.rule=Host:rss.${DOMAIN}
      - traefik.docker.network=proxied
      - traefik.port=4280
    networks:
      - proxied
      - internal
    restart: always
    
  # Ombi
  ombi:
    image: linuxserver/ombi:latest
    container_name: ombi
    volumes:
      - ${BASE_DIR}/ombi:/config
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    labels:
      - traefik.backend=ombi
      - traefik.frontend.rule=Host:ombi.${DOMAIN}
      - traefik.docker.network=proxied
      - traefik.port=3579
    networks:
      - proxied
      - internal
    expose:
      - 3579
    depends_on:
      - plex
    restart: always
  ## /Helper Apps

  ## Torrenting
  # Transmission
  transmission:
    image: haugene/transmission-openvpn:latest
    container_name: transmission
    volumes:
      - ${BASE_DIR}/transmission:/config
      - ${DOWNLOAD_DIR}/torrents:/downloads
      - /media/HDD2/Downloads/torrents:/downloads-hdd2
      - ${DOWNLOAD_DIR}/torrents/watch:/watch

      - /etc/localtime:/etc/localtime:ro
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    networks:
      - proxied
      - internal
    expose:
      - 9091
    restart: always
   # transmission-rss
  transmission-rss:
    image: nning2/transmission-rss
    container_name: transmission-rss
    volumes:
      - ${BASE_DIR}/transmission/transmission-rss.conf:/etc/transmission-rss.conf
    environment:
      - PGID=1000
      - PUID=1000
      - TZ=${TIMEZONE}
    networks:
      - proxied
      - internal
    restart: always   
  ## /Torrenting
  
  ## Traefik Proxy
  # Traefik
  traefik:
    image: traefik:latest
    container_name: traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${BASE_DIR}/traefik/traefik.toml:/traefik.toml
      - ${BASE_DIR}/traefik/acme.json:/acme.json
    labels:
      - traefik.backend=traefik
      - traefik.frontend.rule=Host:traefik.${DOMAIN}
      - traefik.docker.network=proxied
      - traefik.port=8080
    networks:
      - proxied
      - internal
    ports:
      - 80:80
      - 443:443
    expose:
      - 8080
    restart: always
  ## /Traefik Proxy

  ## Watchtower Updater
  watchtower:
    image: v2tec/watchtower:latest
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command:
      - --cleanup --schedule "0 0 2 * * *"
    networks:
      - proxied
    restart: unless-stopped
  ## /Watchtower Updater

# Networking config
networks:
  internal:
    external: false
  proxied:
    external: true
